"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TenderlyApiService = void 0;
const axios = __importStar(require("axios"));
const logger_1 = require("../../../utils/logger");
const config_1 = require("../../../utils/config");
const constants_1 = require("../../../common/constants");
const hardhat_tenderly_version_1 = require("./hardhat-tenderly-version");
class TenderlyApiService {
    static configureInstance(providedAccessKey) {
        logger_1.logger.debug("Configuring instance.");
        let accessKey;
        if (!!providedAccessKey) {
            accessKey = providedAccessKey;
        }
        else {
            const tdlyConfig = (0, config_1.getConfig)();
            accessKey = tdlyConfig.access_key;
        }
        const params = {
            baseURL: constants_1.TENDERLY_API_BASE_URL,
            headers: {
                "x-access-key": accessKey,
                "x-user-agent": `@tenderly/hardhat-tenderly/${hardhat_tenderly_version_1.HARDHAT_TENDERLY_VERSION}`
            },
        };
        logger_1.logger.debug("Configured instance with parameters:", {
            baseURL: constants_1.TENDERLY_API_BASE_URL,
            access_key: accessKey !== undefined && accessKey !== null && accessKey !== ""
                ? "super secret access_key is set in 'access_key' field"
                : "undefined or null or empty string",
        });
        return axios.default.create(params);
    }
    static configureAnonymousInstance() {
        logger_1.logger.debug("Configured anonymous instance towards tenderly api.");
        return axios.default.create({
            baseURL: constants_1.TENDERLY_API_BASE_URL,
        });
    }
    static configureTenderlyRPCInstance() {
        logger_1.logger.debug("Configuring tenderly RPC instance.");
        const tdlyConfig = (0, config_1.getConfig)();
        const params = {
            baseURL: constants_1.TENDERLY_JSON_RPC_BASE_URL,
            headers: {
                "x-access-key": tdlyConfig.access_key,
                Head: tdlyConfig.head !== undefined ? tdlyConfig.head : "",
            },
        };
        logger_1.logger.debug("Configured tenderly rpc instance with parameters:", {
            baseURL: constants_1.TENDERLY_JSON_RPC_BASE_URL,
            access_key: tdlyConfig.access_key !== undefined && tdlyConfig.access_key !== null && tdlyConfig.access_key !== ""
                ? "super secret access_key is set in 'access_key' field"
                : "undefined or null or empty string",
        });
        return axios.default.create(params);
    }
    static isAuthenticated() {
        return (0, config_1.isAccessTokenSet)();
    }
}
exports.TenderlyApiService = TenderlyApiService;
//# sourceMappingURL=TenderlyApiService.js.map